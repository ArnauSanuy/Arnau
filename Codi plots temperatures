import numpy as np
import matplotlib.pyplot as plt
import math


# Constants basiques
alpha = 0.3
beta = 0.5
c1 = 0.5
c3 = 0.3
delta = 0.0005
f= 1

# Valors diferents per poder calcular xm i theta
Ac1 = np.linspace(0.94,1.4,51)
Ac2 = np.linspace(0.96,1.3,51)
e = 1
B = 1
c = 3e10
me = 510998.95/(c**2)
#vb = ((e*B)/(2*math.pi*me*c))
electro = 4.8032*10**(-10)
massa_electro = 9.1094*10**(-28)
vb = (electro*B)/(2*math.pi*massa_electro*c)
#k = 8.617333262*10**(-5)
kTe = np.linspace(50000, 1000000, 51)
theta = kTe/(me*c**2)
v = np.logspace(12,21,51)
logv = np.linspace(12,21,51)


# 3 casos diferents segons quin alphac tenim o derivada de massa
rmin = 3
rmax = 1000
m = [10, 1e5, 1e7, 1e9]
mp1 = np.logspace(-5+math.log10(9), -7,51)
mp2 = np.logspace(-4+math.log10(3), -4,51)
mp3 = np.logspace(-4, -3 + math.log10(8),51)
tau1 = (23.87*mp1)*(alpha/0.3)**(-1)*(c1/0.5)**(-1)*(rmin/3)**(-1/2)
tau2 = (23.87*mp2)*((alpha/0.3)**(-1))*((c1/0.5)**(-1))*((rmin/3)**(-1/2))
tau3 = (23.87*mp3)*(alpha/0.3)**(-1)*(c1/0.5)**(-1)*(rmin/3)**(-1/2)
alphac1 = np.linspace(1.01,10,51)
alphac2 = np.linspace(0.50,1,51)
alphac3 = np.linspace(1.01,10,51)

logxm1 = []
logxm2 = []
logxm3 = []
xm_nova1 = []
xm_nova2 = []
xm_nova3 = []


for i in range(51):
    cas1 = 3.6+0.25*math.log10(mp1[i])
    logxm1.append(cas1)
for i in range(51):
    cas1 = 3.6+0.25*math.log10(mp2[i])
    logxm2.append(cas1)
for i in range(51):
    cas1 = 3.6+0.25*math.log10(mp3[i])
    logxm3.append(cas1)

for i in range(51):
    llista = 10**(logxm1[i])
    xm_nova1.append(llista)
for i in range(51):
    llista = 10**(logxm2[i])
    xm_nova2.append(llista)
for i in range(51):
    llista = 10**(logxm3[i])
    xm_nova3.append(llista)

# def calc_log_x_m(log_m_dot):
#     return 3.6+(1/4)*log_m_dot

# log_m_dot = np.linspace(0,-8,51)
# #print(log_m_dot)
# log_x_m = calc_log_x_m(log_m_dot)
# x_m = 10**log_x_m
# print(x_m)


# Son les tres temperatures
#Te1 = (1.1/Ac1)*(2000*delta)**(1/7)*(xm/300)**(-3/7)*(alpha/0.3)**(3/14)*((1-beta)/0.5)**(-1/14)*(c1/0.5)**(3/14)*(c3/0.3)**(-1/14)*(rmin/3)**(3/28)*m**(1/14)*mp1**(-1/14)

#Te2 = 0.744*((4*tau2**(-1/alphac2)-3)**(1/2)-1)

#Te3 = (2.7/Ac2)*(xm/1000)**(-2/5)*(alpha/0.3)**(-3/50)*(beta/0.5)**(3/25)*((1-beta)/0.5)**(-1/5)*(c1/0.5)**(-3/50)*(c3/0.3)**(-3/50)*(rmin/3)**(1/10)*m**(3/50)*mp3**(3/50)


# Ara ja es poden fer els plots 

Te = []


for j in m:
    for i in range(51):
        cas = (1.1/Ac1[i])*((xm_nova1[i]/300)**(-3/7))*(((1-beta)/0.5)**(-1/14))*(j**(1/14))*(mp1[i]**(-1/14))
        Te.append(cas)
    
# Ara comencem a escriure les temperatures pel primer cas, on els noms de les seguents llistes es refereixen a les temperatures
# A continuacio es ploteja les temperatures segons cada massa en un sol plot
massa1 = []
massa2 = []
massa3 = []
massa4 = []

for i in range(51):
    cas = ((1.1e9)/Ac1[i])*((xm_nova1[i]/300)**(-3/7))*(m[0]**(1/14))*(mp1[i]**(-1/14))
    massa1.append(cas)


for i in range(51):
    cas = ((1.1e9)/Ac1[i])*((xm_nova1[i]/300)**(-3/7))*(m[1]**(1/14))*(mp1[i]**(-1/14))
    massa2.append(cas)


for i in range(51):
    cas = ((1.1e9)/Ac1[i])*((xm_nova1[i]/300)**(-3/7))*(m[2]**(1/14))*(mp1[i]**(-1/14))
    massa3.append(cas)


for i in range(51):
    cas = ((1.1e9)/Ac1[i])*((xm_nova1[i]/300)**(-3/7))*(m[3]**(1/14))*(mp1[i]**(-1/14))
    massa4.append(cas)


plt.semilogy(logv,massa1, label="m=10")
plt.semilogy(logv,massa2, label="$m=10^5$")
plt.semilogy(logv,massa3, label="$m=10^7$")
plt.semilogy(logv,massa4, label="$m=10^9$")
plt.xlabel(r'$\nu$ Hz')
plt.ylabel('Te')
plt.title('Relacio temperatures')
plt.legend()
plt.show()

# Aquí només tenim temperatura per un cas, ja que no depen de la massa, per tant es mes facil

T2 = []

for i in range(51):
    cas2 = (0.744e9)*(((4*tau2[i]**(-1/alphac2[i]))-3)**(1/2)-1)
    T2.append(cas2)

#print(T2)

plt.semilogy(logv,T2)
plt.xlabel(r'$\nu$ Hz')
plt.ylabel('Te')
plt.title('Relacio temperatures')
plt.show()

# Aqui torna a ser com al principi, ja que tenim la temperatura segons cada massa
# Torna a ser un plot per les quatre masses
T3_masa1 = []
T3_masa2 = []
T3_masa3 = []
T3_masa4 = []


for i in range(51):
    cas3 = ((2.7e9)/Ac2[i])*((xm_nova3[i]/1000)**(-2/5))*(((1-beta)/0.5)**(-1/5))*(m[0]**(3/50))*(mp3[i]**(3/50))
    T3_masa1.append(cas3)

for i in range(51):
    cas3 = ((2.7e9)/Ac2[i])*((xm_nova3[i]/1000)**(-2/5))*(((1-beta)/0.5)**(-1/5))*(m[1]**(3/50))*(mp3[i]**(3/50))
    T3_masa2.append(cas3)

for i in range(51):
    cas3 = ((2.7e9)/Ac2[i])*((xm_nova3[i]/1000)**(-2/5))*(((1-beta)/0.5)**(-1/5))*(m[2]**(3/50))*(mp3[i]**(3/50))
    T3_masa3.append(cas3)

for i in range(51):
    cas3 = ((2.7e9)/Ac2[i])*((xm_nova3[i]/1000)**(-2/5))*(((1-beta)/0.5)**(-1/5))*(m[3]**(3/50))*(mp3[i]**(3/50))
    T3_masa4.append(cas3)


plt.semilogy(logv,T3_masa1, label="m=10")
plt.semilogy(logv,T3_masa2, label="$m=10^5$")
plt.semilogy(logv,T3_masa3, label="$m=10^7$")
plt.semilogy(logv,T3_masa4, label="$m=10^9$")
plt.xlabel(r'$\nu$ Hz')
plt.ylabel('Te')
plt.title('Relacio temperatures')
plt.legend()
plt.show()


# plt.plot(logMp1, nova_alpha1)
# plt.plot(logMp2, nova_alpha2)
# plt.plot(logMp3, nova_alpha3)
# plt.xlabel('$\nu$ Hz')
# plt.ylabel('$\dfrac{Te}{10^9}$')
# plt.title('Relacio temperatures')
# plt.legend()
# plt.show()

# print('_______________________________________________________')

# print('_______________________________________________________')

# print('A partir aquí no tenir en compte, ja que és erroni, és per expressió tant llarga i que poden haver errors')



# g = ((2/math.pi)**(1/2))*(1/theta**(1/2))*(2+2*theta+1/theta)

# F1 = []
# F2 = []


# for i in range(0,25):
#     cas = 4*((2*theta[i]/math.pi**3)**(1/2))*(1+1.781*theta[i]**(1.34))+1.73*(theta[i]**(3/2))*(1+1.1*theta[i]+(theta[i]**2)-1.25*theta[i]**(5/2))
#     F1.append(cas)

# for i in range(25,51):
#     cas = (9*theta[i]/(2*math.pi))*(math.log(1.123*theta[i]+0.48)+1.5)+2.3*theta[i]*(math.log(1.123*theta[i])+1.28)
#     F2.append(cas)


# F = F1+F2

# gamma = []

# for i in range(51):
#     info = ((1.2e38*g[i]*c3*beta*mp1[i])/((alpha**2)*(c1**2)*rmin))+delta*(9.39e38)*(c3/rmin)*((1-beta)/f)-((4.78e34)*math.log(rmax/rmin)*F[i]*mp1[i])/((alpha**2)*(c1**2))
#     gamma.append(info)

# #print(gamma)


# #Codi de les quatre masses per la primera opció



# temperatura_gran1 = []
# temperatura_gran2 = []
# temperatura_gran3 = []
# temperatura_gran4 = []


# for i in range(51):
#     calculs = 1e9*((gamma[i]*0.71*(alphac1[i]-1)*(m[0]/mp1[i])**(1/2))/(5.3e35*(0.71*alphac1[i]+0.29)*(xm[i]/1000)**3))**(1/7)
#     temperatura_gran1.append(calculs)

# for i in range(51):
#     calculs = 1e9*((gamma[i]*0.71*(alphac1[i]-1)*(m[1]/mp1[i])**(1/2))/(5.3e35*(0.71*alphac1[i]+0.29)*(xm[i]/1000)**3))**(1/7)
#     temperatura_gran2.append(calculs)

# for i in range(51):
#     calculs = 1e9*((gamma[i]*0.71*(alphac1[i]-1)*(m[2]/mp1[i])**(1/2))/(5.3e35*(0.71*alphac1[i]+0.29)*(xm[i]/1000)**3))**(1/7)
#     temperatura_gran3.append(calculs)

# for i in range(51):
#     calculs = 1e9*((gamma[i]*0.71*(alphac1[i]-1)*(m[3]/mp1[i])**(1/2))/(5.3e35*(0.71*alphac1[i]+0.29)*(xm[i]/1000)**3))**(1/7)
#     temperatura_gran4.append(calculs)


# plt.plot(logv,temperatura_gran1, label="m=10")
# plt.plot(logv,temperatura_gran2, label="$m=10^5$")
# plt.plot(logv,temperatura_gran3, label="$m=10^7$")
# plt.plot(logv,temperatura_gran4, label="$m=10^9$")
# plt.xlabel('$\nu$ Hz')
# plt.ylabel('Te')
# plt.title('Relacio temperatures')
# plt.legend()
# plt.show()

# print('_______________________________________________________')
# #Codi de les quatre masses per la segona opció

# temperatura1 = []
# temperatura2 = []
# temperatura3 = []
# temperatura4 = []

# for i in range(51):
#     calculs = 1e9*((gamma[i]*0.71*(1-alphac2[i])*(m[0]/mp2[i])**(1/2))/(5.3e35*(xm[i]/1000)**3))**(1/7)
#     temperatura1.append(calculs)

# for i in range(51):
#     calculs = 1e9*((gamma[i]*0.71*(1-alphac2[i])*(m[1]/mp2[i])**(1/2))/(5.3e35*(xm[i]/1000)**3))**(1/7)
#     temperatura2.append(calculs)

# for i in range(51):
#     calculs = 1e9*((gamma[i]*0.71*(1-alphac2[i])*(m[2]/mp2[i])**(1/2))/(5.3e35*(xm[i]/1000)**3))**(1/7)
#     temperatura3.append(calculs)

# for i in range(51):
#     calculs = 1e9*((gamma[i]*0.71*(1-alphac2[i])*(m[3]/mp2[i])**(1/2))/(5.3e35*(xm[i]/1000)**3))**(1/7)
#     temperatura4.append(calculs)

# plt.plot(logv,temperatura1, label="m=10")
# plt.plot(logv,temperatura2, label="$m=10^5$")
# plt.plot(logv,temperatura3, label="$m=10^7$")
# plt.plot(logv,temperatura4, label="$m=10^9$")
# plt.xlabel('$\nu$ Hz')
# plt.ylabel('Te')
# plt.title('Relacio temperatures')
# plt.legend()
# plt.show()


# segona_temperatura1 = []
# segona_temperatura2 = []
# segona_temperatura3 = []
# segona_temperatura4 = []

# for i in range(51):
#     calculs = ((6.2e10*rmin**(5/4))/(0.00016898*xm[i]))*(((alpha*c1*m[0])/((1-beta)*c3*mp2[i]))**(1/2))*(1/(((gamma[i]*0.71*(1-alphac2[i])*(m[0]/mp2[i])**(1/2))/(5.3e35*(xm[i]/1000)**3))+0.39+0.71*alphac2[i])**(1-alphac2[i]))
#     segona_temperatura1.append(calculs)

# for i in range(51):
#     calculs = ((6.2e10*rmin**(5/4))/(0.00016898*xm[i]))*(((alpha*c1*m[1])/((1-beta)*c3*mp2[i]))**(1/2))*(1/(((gamma[i]*0.71*(1-alphac2[i])*(m[1]/mp2[i])**(1/2))/(5.3e35*(xm[i]/1000)**3))+0.39+0.71*alphac2[i])**(1-alphac2[i]))
#     segona_temperatura2.append(calculs)

# for i in range(51):
#     calculs = ((6.2e10*rmin**(5/4))/(0.00016898*xm[i]))*(((alpha*c1*m[2])/((1-beta)*c3*mp2[i]))**(1/2))*(1/(((gamma[i]*0.71*(1-alphac2[i])*(m[2]/mp2[i])**(1/2))/(5.3e35*(xm[i]/1000)**3))+0.39+0.71*alphac2[i])**(1-alphac2[i]))
#     segona_temperatura3.append(calculs)

# for i in range(51):
#     calculs = ((6.2e10*rmin**(5/4))/(0.00016898*xm[i]))*(((alpha*c1*m[3])/((1-beta)*c3*mp2[i]))**(1/2))*(1/(((gamma[i]*0.71*(1-alphac2[i])*(m[3]/mp2[i])**(1/2))/(5.3e35*(xm[i]/1000)**3))+0.39+0.71*alphac2[i])**(1-alphac2[i]))
#     segona_temperatura4.append(calculs)

# plt.plot(logv,segona_temperatura1, label="m=10")
# plt.plot(logv,segona_temperatura2, label="$m=10^5$")
# plt.plot(logv,segona_temperatura3, label="$m=10^7$")
# plt.plot(logv,segona_temperatura4, label="$m=10^9$")
# plt.xlabel('$\nu$ Hz')
# plt.ylabel('Te')
# plt.title('Relacio temperatures')
# plt.legend()
# plt.show()


# print('_______________________________________________________')

# #Codi de les quatre masses per la tercera opcio

# temperatura_final1 = []
# temperatura_final2 = []
# temperatura_final3 = []
# temperatura_final4 = []


# for i in range(51):
#     calculs = 1e9*((gamma[i]*0.71*(alphac3[i]-1)*(m[0]/mp3[i])**(1/2))/(5.3e35*(0.71*alphac3[i]+0.29)*(xm[i]/1000)**3))**(1/7)
#     temperatura_final1.append(calculs)

# for i in range(51):
#     calculs = 1e9*((gamma[i]*0.71*(alphac3[i]-1)*(m[1]/mp3[i])**(1/2))/(5.3e35*(0.71*alphac3[i]+0.29)*(xm[i]/1000)**3))**(1/7)
#     temperatura_final2.append(calculs)

# for i in range(51):
#     calculs = 1e9*((gamma[i]*0.71*(alphac3[i]-1)*(m[2]/mp3[i])**(1/2))/(5.3e35*(0.71*alphac3[i]+0.29)*(xm[i]/1000)**3))**(1/7)
#     temperatura_final3.append(calculs)

# for i in range(51):
#     calculs = 1e9*((gamma[i]*0.71*(alphac3[i]-1)*(m[3]/mp3[i])**(1/2))/(5.3e35*(0.71*alphac3[i]+0.29)*(xm[i]/1000)**3))**(1/7)
#     temperatura_final4.append(calculs)


# plt.plot(logv,temperatura_final1, label="m=10")
# plt.plot(logv,temperatura_final2, label="$m=10^5$")
# plt.plot(logv,temperatura_final3, label="$m=10^7$")
# plt.plot(logv,temperatura_final4, label="$m=10^9$")
# plt.xlabel('$\nu$ Hz')
# plt.ylabel('Te')
# plt.title('Relacio temperatures')
# plt.legend()
# plt.show()




# plt.plot(logv,massa1, label="$m=10^9$")
# plt.plot(logv,temperatura_gran1, label="opció")
# plt.xlabel('$\nu$ Hz')
# plt.ylabel('Te')
# plt.title('Relacio temperatures')
# plt.legend()
# plt.show()
